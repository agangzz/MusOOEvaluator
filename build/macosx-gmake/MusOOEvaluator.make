# GNU Make project makefile autogenerated by Premake
ifndef config
  config=release
endif

ifndef verbose
  SILENT = @
endif

ifndef CC
  CC = gcc
endif

ifndef CXX
  CXX = g++
endif

ifndef AR
  AR = ar
endif

ifeq ($(config),release)
  OBJDIR     = obj/Release
  TARGETDIR  = .
  TARGET     = $(TARGETDIR)/MusOOEvaluator
  DEFINES   += -DNDEBUG
  INCLUDES  += -I../.. -I../../libMusOO -I../../third-party/eigen -I$(COMPILED_LIBRARIES_INCLUDE)
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -O2
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += $(shell test ${COMPILED_LIBRARIES_LIB} && echo ${COMPILED_LIBRARIES_LIB} || echo $(shell brew --prefix)/lib)/libboost_filesystem.a $(shell test ${COMPILED_LIBRARIES_LIB} && echo ${COMPILED_LIBRARIES_LIB} || echo $(shell brew --prefix)/lib)/libboost_program_options.a $(shell test ${COMPILED_LIBRARIES_LIB} && echo ${COMPILED_LIBRARIES_LIB} || echo $(shell brew --prefix)/lib)/libboost_system.a
  LIBS      += 
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += 
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),debug)
  OBJDIR     = obj/Debug
  TARGETDIR  = .
  TARGET     = $(TARGETDIR)/MusOOEvaluator
  DEFINES   += -DDEBUG
  INCLUDES  += -I../.. -I../../libMusOO -I../../third-party/eigen -I$(COMPILED_LIBRARIES_INCLUDE)
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -g
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += $(shell test ${COMPILED_LIBRARIES_LIB} && echo ${COMPILED_LIBRARIES_LIB} || echo $(shell brew --prefix)/lib)/libboost_filesystem.a $(shell test ${COMPILED_LIBRARIES_LIB} && echo ${COMPILED_LIBRARIES_LIB} || echo $(shell brew --prefix)/lib)/libboost_program_options.a $(shell test ${COMPILED_LIBRARIES_LIB} && echo ${COMPILED_LIBRARIES_LIB} || echo $(shell brew --prefix)/lib)/libboost_system.a
  LIBS      += 
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += 
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

OBJECTS := \
	$(OBJDIR)/ChordEvaluationStats.o \
	$(OBJDIR)/KeyEvaluationStats.o \
	$(OBJDIR)/MusOOEvaluator.o \
	$(OBJDIR)/NoteEvaluationStats.o \
	$(OBJDIR)/PairwiseEvaluation.o \
	$(OBJDIR)/SegmentationEvaluation.o \
	$(OBJDIR)/SimilarityScoreChord.o \
	$(OBJDIR)/SimilarityScoreKey.o \
	$(OBJDIR)/SimilarityScoreNote.o \
	$(OBJDIR)/Chord.o \
	$(OBJDIR)/ChordProsemus.o \
	$(OBJDIR)/ChordQM.o \
	$(OBJDIR)/ChordQuaero.o \
	$(OBJDIR)/ChordType.o \
	$(OBJDIR)/Chroma.o \
	$(OBJDIR)/ChromaSolfege.o \
	$(OBJDIR)/Interval.o \
	$(OBJDIR)/IntervalClassSet.o \
	$(OBJDIR)/Key.o \
	$(OBJDIR)/KeyElis.o \
	$(OBJDIR)/KeyQM.o \
	$(OBJDIR)/KeyQuaero.o \
	$(OBJDIR)/Mode.o \
	$(OBJDIR)/Note.o \
	$(OBJDIR)/NoteMidi.o \
	$(OBJDIR)/RelativeChord.o \
	$(OBJDIR)/ChordFile.o \
	$(OBJDIR)/ChordFileProsemus.o \
	$(OBJDIR)/ChordFileQM.o \
	$(OBJDIR)/KeyFile.o \
	$(OBJDIR)/KeyFileElis.o \
	$(OBJDIR)/KeyFileProsemus.o \
	$(OBJDIR)/KeyFileQM.o \
	$(OBJDIR)/NoteFile.o \
	$(OBJDIR)/NoteFileMaps.o \
	$(OBJDIR)/tinyxml2.o \

RESOURCES := \

SHELLTYPE := msdos
ifeq (,$(ComSpec)$(COMSPEC))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(SHELL)))
  SHELLTYPE := posix
endif

.PHONY: clean prebuild prelink

all: $(TARGETDIR) $(OBJDIR) prebuild prelink $(TARGET)
	@:

$(TARGET): $(GCH) $(OBJECTS) $(LDDEPS) $(RESOURCES)
	@echo Linking MusOOEvaluator
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning MusOOEvaluator
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(GCH): $(PCH)
	@echo $(notdir $<)
	-$(SILENT) cp $< $(OBJDIR)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
endif

$(OBJDIR)/ChordEvaluationStats.o: ../../ChordEvaluationStats.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/KeyEvaluationStats.o: ../../KeyEvaluationStats.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/MusOOEvaluator.o: ../../MusOOEvaluator.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/NoteEvaluationStats.o: ../../NoteEvaluationStats.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/PairwiseEvaluation.o: ../../PairwiseEvaluation.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/SegmentationEvaluation.o: ../../SegmentationEvaluation.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/SimilarityScoreChord.o: ../../SimilarityScoreChord.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/SimilarityScoreKey.o: ../../SimilarityScoreKey.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/SimilarityScoreNote.o: ../../SimilarityScoreNote.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Chord.o: ../../libMusOO/MusOO/Chord.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ChordProsemus.o: ../../libMusOO/MusOO/ChordProsemus.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ChordQM.o: ../../libMusOO/MusOO/ChordQM.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ChordQuaero.o: ../../libMusOO/MusOO/ChordQuaero.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ChordType.o: ../../libMusOO/MusOO/ChordType.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Chroma.o: ../../libMusOO/MusOO/Chroma.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ChromaSolfege.o: ../../libMusOO/MusOO/ChromaSolfege.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Interval.o: ../../libMusOO/MusOO/Interval.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/IntervalClassSet.o: ../../libMusOO/MusOO/IntervalClassSet.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Key.o: ../../libMusOO/MusOO/Key.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/KeyElis.o: ../../libMusOO/MusOO/KeyElis.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/KeyQM.o: ../../libMusOO/MusOO/KeyQM.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/KeyQuaero.o: ../../libMusOO/MusOO/KeyQuaero.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Mode.o: ../../libMusOO/MusOO/Mode.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Note.o: ../../libMusOO/MusOO/Note.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/NoteMidi.o: ../../libMusOO/MusOO/NoteMidi.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/RelativeChord.o: ../../libMusOO/MusOO/RelativeChord.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ChordFile.o: ../../libMusOO/MusOOFile/ChordFile.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ChordFileProsemus.o: ../../libMusOO/MusOOFile/ChordFileProsemus.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ChordFileQM.o: ../../libMusOO/MusOOFile/ChordFileQM.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/KeyFile.o: ../../libMusOO/MusOOFile/KeyFile.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/KeyFileElis.o: ../../libMusOO/MusOOFile/KeyFileElis.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/KeyFileProsemus.o: ../../libMusOO/MusOOFile/KeyFileProsemus.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/KeyFileQM.o: ../../libMusOO/MusOOFile/KeyFileQM.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/NoteFile.o: ../../libMusOO/MusOOFile/NoteFile.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/NoteFileMaps.o: ../../libMusOO/MusOOFile/NoteFileMaps.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/tinyxml2.o: ../../libMusOO/tinyxml2/tinyxml2.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"

-include $(OBJECTS:%.o=%.d)
